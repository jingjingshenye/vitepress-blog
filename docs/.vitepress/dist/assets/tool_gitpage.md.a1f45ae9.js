import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.d7a29f29.js";const d=JSON.parse('{"title":"静态网站托管","description":"","frontmatter":{},"headers":[],"relativePath":"tool/gitpage.md","filePath":"tool/gitpage.md"}'),l={name:"tool/gitpage.md"},o=p(`<h1 id="静态网站托管" tabindex="-1">静态网站托管 <a class="header-anchor" href="#静态网站托管" aria-label="Permalink to &quot;静态网站托管&quot;">​</a></h1><h2 id="_1-什么是静态网站托管" tabindex="-1">1. 什么是静态网站托管 <a class="header-anchor" href="#_1-什么是静态网站托管" aria-label="Permalink to &quot;1. 什么是静态网站托管&quot;">​</a></h2><p>静态网站托管（Static Website Hosting）是指将网站文件（HTML、CSS、JavaScript、图片等）存储在服务器上，并提供访问服务的网站服务。</p><h2 id="_2-静态网站托管的优势" tabindex="-1">2. 静态网站托管的优势 <a class="header-anchor" href="#_2-静态网站托管的优势" aria-label="Permalink to &quot;2. 静态网站托管的优势&quot;">​</a></h2><ul><li>免费：静态网站托管服务免费，不需要支付任何费用。</li></ul><h2 id="github-静态托管" tabindex="-1">github 静态托管 <a class="header-anchor" href="#github-静态托管" aria-label="Permalink to &quot;github 静态托管&quot;">​</a></h2><p>github pages 是 github 提供的静态托管服务，可以直接在 github 上托管静态网站。</p><p>GH-Pages</p><p>简单介绍一下 Github Pages 。这是一项 Github 推出的免费服务（对私有仓库是收费的）。只要通过一些简单的规则，你就可以为托管在 Github 的项目创建在线页面。</p><p>Github Pages 分为「个人/组织页面」以及「项目页面」两种，前者用于展示个人信息，适用于个人主页、简历或博客。后种可以用来介绍项目，提供文档，或展示 Demo 等。</p><p>Personal Page</p><p>假设你有一个 github 帐号， 如果你想要创建个人页面， 只需要创建一个仓库：<a href="https://github.com/jingjignshenye/blog.github.io" target="_blank" rel="noreferrer">https://github.com/jingjignshenye/blog.github.io</a> 然后提交静态页面到该仓库的 master 分支下。</p><p>所有的内容都会被托管到这个地址：<a href="https://jingjignshenye.github.io" target="_blank" rel="noreferrer">https://jingjignshenye.github.io</a> （建议开启强制 https）</p><p>Project Page 如果你有一个项目：<a href="https://jingjingshenye.github.io/blog/" target="_blank" rel="noreferrer">https://jingjingshenye.github.io/blog/</a> ， 则有几种方式可以使用 GH-Pages 托管面页：</p><p>直接使用 master 分支，常用于静态 Web 项目；</p><p>可以在项目的 master 分支下创建一个 /doc 目录，将静态页面放在该目录，常用于文档；</p><p>或创始一个 gh-pages 分支，将静态页面放在根目录，常用于静态生成博客；</p><h3 id="vite-config-js" tabindex="-1">vite.config.js <a class="header-anchor" href="#vite-config-js" aria-label="Permalink to &quot;vite.config.js&quot;">​</a></h3><p>要生成可以托管的静态网站，该位置文件里添加<code>base</code>这个选项</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">module</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">exports</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  base: </span><span style="color:#9ECBFF;">&quot;/blog/&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">module</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">exports</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  base: </span><span style="color:#032F62;">&quot;/blog/&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">};</span></span></code></pre></div><p>windows 下运行命令<code>&quot;deploy&quot;: &quot;powershell bin/deploy.bat&quot;</code>，可以推送到远程仓库</p><p>bat 脚本如下</p><div class="language-bat vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bat</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">call</span><span style="color:#E1E4E8;"> yarn build</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">cd</span><span style="color:#E1E4E8;"> dist</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">git init</span></span>
<span class="line"><span style="color:#E1E4E8;">git add -A</span></span>
<span class="line"><span style="color:#E1E4E8;">git commit -m </span><span style="color:#9ECBFF;">&quot;auto construct blog&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">@</span><span style="color:#F97583;">REM</span><span style="color:#6A737D;">  git push [远程库名] [本地分支名]:[远程分支名]</span></span>
<span class="line"><span style="color:#F97583;">@</span><span style="color:#F97583;">REM</span><span style="color:#6A737D;"> git push -f https://github.com/jingjingshenye/vitepress-blog.git master:gh-pages</span></span>
<span class="line"><span style="color:#E1E4E8;">git push -f https://github.com/jingjingshenye/canvas-blog.git master:gh-pages</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">call</span><span style="color:#24292E;"> yarn build</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">cd</span><span style="color:#24292E;"> dist</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">git init</span></span>
<span class="line"><span style="color:#24292E;">git add -A</span></span>
<span class="line"><span style="color:#24292E;">git commit -m </span><span style="color:#032F62;">&quot;auto construct blog&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">@</span><span style="color:#D73A49;">REM</span><span style="color:#6A737D;">  git push [远程库名] [本地分支名]:[远程分支名]</span></span>
<span class="line"><span style="color:#D73A49;">@</span><span style="color:#D73A49;">REM</span><span style="color:#6A737D;"> git push -f https://github.com/jingjingshenye/vitepress-blog.git master:gh-pages</span></span>
<span class="line"><span style="color:#24292E;">git push -f https://github.com/jingjingshenye/canvas-blog.git master:gh-pages</span></span></code></pre></div><p>编译后的文件需要推送到仓库的 gh-pages 分支。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add.</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">commit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-m</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;commit message&quot;</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">push</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">origin</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">gh-pages</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add.</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">commit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-m</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;commit message&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">push</span><span style="color:#24292E;"> </span><span style="color:#032F62;">origin</span><span style="color:#24292E;"> </span><span style="color:#032F62;">gh-pages</span></span></code></pre></div><h3 id="_1-注册-github-账号" tabindex="-1">1. 注册 github 账号 <a class="header-anchor" href="#_1-注册-github-账号" aria-label="Permalink to &quot;1. 注册 github 账号&quot;">​</a></h3><p>注册 github 账号，如果没有账号，可以直接注册一个。</p><h3 id="_2-创建仓库" tabindex="-1">2. 创建仓库 <a class="header-anchor" href="#_2-创建仓库" aria-label="Permalink to &quot;2. 创建仓库&quot;">​</a></h3><p>点击右上角的+号，选择 New repository，输入仓库名称，并选择公开。</p><h3 id="_3-克隆仓库" tabindex="-1">3. 克隆仓库 <a class="header-anchor" href="#_3-克隆仓库" aria-label="Permalink to &quot;3. 克隆仓库&quot;">​</a></h3><p>在终端中，输入以下命令克隆仓库：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clone</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://github.com/username/repository_name.git</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clone</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://github.com/username/repository_name.git</span></span></code></pre></div><h3 id="_4-上传文件" tabindex="-1">4. 上传文件 <a class="header-anchor" href="#_4-上传文件" aria-label="Permalink to &quot;4. 上传文件&quot;">​</a></h3><p>将文件上传到仓库的根目录下，然后通过 git 命令将文件提交到仓库。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add.</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">commit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-m</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;first commit&quot;</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">push</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-u</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">origin</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">master</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add.</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">commit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-m</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;first commit&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">push</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-u</span><span style="color:#24292E;"> </span><span style="color:#032F62;">origin</span><span style="color:#24292E;"> </span><span style="color:#032F62;">master</span></span></code></pre></div><h3 id="_5-访问网站" tabindex="-1">5. 访问网站 <a class="header-anchor" href="#_5-访问网站" aria-label="Permalink to &quot;5. 访问网站&quot;">​</a></h3><p>在浏览器中输入仓库的网址，就可以看到托管的网站了。</p>`,37),e=[o];function t(c,i,r,g,h,y){return a(),n("div",null,e)}const u=s(l,[["render",t]]);export{d as __pageData,u as default};
